{"version":3,"sources":["sound/BeepSound.wav","pomodoro.png","components/BreakLength.js","components/SessionLength.js","components/LongBreakLength.js","components/Timer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BreakLength","props","Container","fluid","id","Row","className","Button","onClick","increaseBreak","disabled","timerRunning","icon","faPlus","breakLength","decreaseBreak","faMinus","SessionLength","increaseSession","sessionLength","decreaseSession","LongBreakLength","increaseLongBreak","longBreakLength","decreaseLongBreak","runningColor","border","marginBottom","borderRadius","width","padding","backgroundColor","color","textShadow","notRunningColor","Timer","state","intervalID","resetButton","bind","playButton","this","accurateInterval","timerCountdown","timerRunningSwitch","setState","clear","resetTimer","style","Col","currentSession","timerCount","timerSeconds","textAlign","variant","faPause","faPlay","faRedo","Component","App","currentTimer","breakCounter","onIncreaseSessionLength","onDecreaseSessionLength","onIncreaseBreakLength","onDecreaseBreakLength","onIncreaseLongBreakLength","onDecreaseLongBreakLength","onResetTimer","updateTimerMinute","playAlarm","audioAlarm","play","pause","currentTime","src","require","alt","height","xs","sm","preload","Alarm","ref","audio","href","React","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dc6d0096.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/BeepSound.988833bf.wav\";","module.exports = __webpack_public_path__ + \"static/media/pomodoro.7ffd2e73.png\";","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Row, Container } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faMinus } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction BreakLength(props) {\r\n  return (\r\n    <Container fluid>\r\n      <h4 id='break-label'>Break Length</h4>\r\n      <Row className='justify-content-center'>\r\n        <Button\r\n          onClick={props.increaseBreak}\r\n          id='break-increment'\r\n          disabled={!props.timerRunning ? \"\" : \"disabled\"}\r\n        >\r\n          <FontAwesomeIcon icon={faPlus} />\r\n        </Button>\r\n        <span id='break-length'>{props.breakLength}</span>\r\n        <Button\r\n          onClick={props.decreaseBreak}\r\n          id='break-decrement'\r\n          disabled={!props.timerRunning ? \"\" : \"disabled\"}\r\n        >\r\n          <FontAwesomeIcon icon={faMinus} />\r\n        </Button>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default BreakLength;\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Row, Container } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faMinus } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction SessionLength(props) {\r\n  return (\r\n    <Container fluid>\r\n      <h4 id='session-label'>Session Length</h4>\r\n      <Row className='justify-content-center'>\r\n        <Button\r\n          onClick={props.increaseSession}\r\n          id='session-increment'\r\n          disabled={!props.timerRunning ? \"\" : \"disabled\"}\r\n        >\r\n          <FontAwesomeIcon icon={faPlus} />\r\n        </Button>\r\n        <span id='session-length'>{props.sessionLength}</span>\r\n        <Button\r\n          onClick={props.decreaseSession}\r\n          id='session-decrement'\r\n          disabled={!props.timerRunning ? \"\" : \"disabled\"}\r\n        >\r\n          <FontAwesomeIcon icon={faMinus} />\r\n        </Button>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SessionLength;\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Row, Container } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faMinus } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction LongBreakLength(props) {\r\n  return (\r\n    <Container fluid>\r\n      <h4 id='long-break-length'>Long Break Length</h4>\r\n      <Row className='justify-content-center'>\r\n        <Button\r\n          onClick={props.increaseLongBreak}\r\n          id='long-break-increment'\r\n          disabled={!props.timerRunning ? \"\" : \"disabled\"}\r\n        >\r\n          <FontAwesomeIcon icon={faPlus} />\r\n        </Button>\r\n        <span id='long-break-length'>{props.longBreakLength}</span>\r\n        <Button\r\n          onClick={props.decreaseLongBreak}\r\n          id='long-break-decrement'\r\n          disabled={!props.timerRunning ? \"\" : \"disabled\"}\r\n        >\r\n          <FontAwesomeIcon icon={faMinus} />\r\n        </Button>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default LongBreakLength;\r\n","import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlay, faPause, faRedo } from \"@fortawesome/free-solid-svg-icons\";\r\nimport accurateInterval from \"accurate-interval\";\r\n\r\nvar runningColor = {\r\n  border: \"3px solid silver\",\r\n  marginBottom: \"5px\",\r\n  borderRadius: \"25px\",\r\n  width: \"250px\",\r\n  padding: \"15px\",\r\n  backgroundColor: \"black\",\r\n  color: \"green\",\r\n  textShadow: \"0 0 10px green\",\r\n};\r\n\r\nvar notRunningColor = {\r\n  border: \"3px solid silver\",\r\n  marginBottom: \"5px\",\r\n  borderRadius: \"25px\",\r\n  width: \"250px\",\r\n  padding: \"15px\",\r\n  backgroundColor: \"black\",\r\n  color: \"orange\",\r\n  textShadow: \"0 0 10px orange\",\r\n};\r\nexport default class Timer extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      intervalID: 0,\r\n    };\r\n    this.resetButton = this.resetButton.bind(this);\r\n    this.playButton = this.playButton.bind(this);\r\n  }\r\n\r\n  playButton() {\r\n    if (this.props.timerRunning === false) {\r\n      var intervalID = accurateInterval(this.props.timerCountdown, 1000);\r\n      this.props.timerRunningSwitch();\r\n      this.setState({\r\n        intervalID: intervalID,\r\n      });\r\n    } else {\r\n      this.state.intervalID && this.state.intervalID.clear();\r\n      this.props.timerRunningSwitch();\r\n    }\r\n  }\r\n\r\n  resetButton() {\r\n    this.props.resetTimer();\r\n    this.state.intervalID && this.state.intervalID.clear();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row style={!this.props.timerRunning ? notRunningColor : runningColor}>\r\n          <Col>\r\n            <h3 id='timer-label'>{this.props.currentSession}</h3>\r\n            <span id='time-left'>\r\n              {this.props.timerCount === 0\r\n                ? \"00\"\r\n                : this.props.timerCount < 10\r\n                ? \"0\" + this.props.timerCount\r\n                : this.props.timerCount}\r\n              :\r\n              {this.props.timerSeconds === 0\r\n                ? \"00\"\r\n                : this.props.timerSeconds < 10\r\n                ? \"0\" + this.props.timerSeconds\r\n                : this.props.timerSeconds}\r\n            </span>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{ textAlign: \"center\" }}>\r\n          <Col>\r\n            <Button\r\n              onClick={this.playButton}\r\n              id='start_stop'\r\n              variant={!this.props.timerRunning ? \"primary\" : \"success\"}\r\n            >\r\n              <FontAwesomeIcon\r\n                icon={!this.props.timerRunning ? faPlay : faPause}\r\n              />\r\n              {!this.props.timerRunning ? \" Play\" : \" Pause\"}\r\n            </Button>\r\n            <Button onClick={this.resetButton} id='reset' variant='danger'>\r\n              <FontAwesomeIcon icon={faRedo} /> Reset\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport BreakLength from \"./components/BreakLength\";\nimport SessionLength from \"./components/SessionLength\";\nimport LongBreakLength from \"./components/LongBreakLength\";\nimport Timer from \"./components/Timer\";\nimport Alarm from \"./sound/BeepSound.wav\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      breakLength: 5,\n      longBreakLength: 20,\n      sessionLength: 25,\n      timerCount: 25,\n      timerSeconds: 0,\n      currentTimer: \"Session\",\n      breakCounter: 0,\n      timerRunning: false,\n    };\n    this.onIncreaseSessionLength = this.onIncreaseSessionLength.bind(this);\n    this.onDecreaseSessionLength = this.onDecreaseSessionLength.bind(this);\n    this.onIncreaseBreakLength = this.onIncreaseBreakLength.bind(this);\n    this.onDecreaseBreakLength = this.onDecreaseBreakLength.bind(this);\n    this.onIncreaseLongBreakLength = this.onIncreaseLongBreakLength.bind(this);\n    this.onDecreaseLongBreakLength = this.onDecreaseLongBreakLength.bind(this);\n    this.onResetTimer = this.onResetTimer.bind(this);\n    this.updateTimerMinute = this.updateTimerMinute.bind(this);\n    this.timerCountdown = this.timerCountdown.bind(this);\n    this.playAlarm = this.playAlarm.bind(this);\n    this.timerRunningSwitch = this.timerRunningSwitch.bind(this);\n  }\n\n  onIncreaseSessionLength() {\n    if (this.state.sessionLength < 60 && !this.state.timerRunning) {\n      this.setState({\n        sessionLength: this.state.sessionLength + 1,\n        timerCount: this.state.sessionLength + 1,\n      });\n    } else {\n      return;\n    }\n  }\n  onDecreaseSessionLength() {\n    if (this.state.sessionLength > 1 && !this.state.timerRunning) {\n      this.setState({\n        sessionLength: this.state.sessionLength - 1,\n        timerCount: this.state.sessionLength - 1,\n      });\n    } else {\n      return;\n    }\n  }\n  onIncreaseBreakLength() {\n    if (this.state.breakLength < 60 && !this.state.timerRunning) {\n      this.setState({ breakLength: this.state.breakLength + 1 });\n    } else {\n      return;\n    }\n  }\n\n  onDecreaseBreakLength() {\n    if (this.state.breakLength > 1 && !this.state.timerRunning) {\n      this.setState({ breakLength: this.state.breakLength - 1 });\n    } else {\n      return;\n    }\n  }\n\n  onIncreaseLongBreakLength() {\n    if (this.state.longBreakLength < 60 && !this.state.timerRunning) {\n      this.setState({ longBreakLength: this.state.longBreakLength + 1 });\n    } else {\n      return;\n    }\n  }\n\n  onDecreaseLongBreakLength() {\n    if (this.state.longBreakLength > 1 && !this.state.timerRunning) {\n      this.setState({ longBreakLength: this.state.longBreakLength - 1 });\n    } else {\n      return;\n    }\n  }\n\n  timerCountdown() {\n    switch (this.state.timerSeconds) {\n      case 0:\n        this.setState({ timerSeconds: 59 });\n        this.updateTimerMinute();\n        break;\n      default:\n        this.setState({ timerSeconds: this.state.timerSeconds - 1 });\n        break;\n    }\n  }\n\n  updateTimerMinute() {\n    if (this.state.timerCount > 0) {\n      this.setState({ timerCount: this.state.timerCount - 1 });\n    } else {\n      this.playAlarm();\n      if (this.state.currentTimer === \"Session\") {\n        if (this.state.breakCounter === 3) {\n          this.setState({\n            timerCount: this.state.longBreakLength,\n            currentTimer: \"Long Break\",\n            timerSeconds: 0,\n            breakCounter: 0,\n          });\n        } else {\n          this.setState({\n            timerCount: this.state.breakLength,\n            currentTimer: \"Break\",\n            timerSeconds: 0,\n            breakCounter: this.state.breakCounter + 1,\n          });\n        }\n      } else {\n        this.setState({\n          timerCount: this.state.sessionLength,\n          currentTimer: \"Session\",\n          timerSeconds: 0,\n        });\n      }\n    }\n  }\n\n  playAlarm() {\n    if (this.state.timerCount === 0) {\n      this.audioAlarm.play();\n    }\n  }\n\n  onResetTimer() {\n    this.setState({\n      breakLength: 5,\n      longBreakLength: 20,\n      sessionLength: 25,\n      timerCount: 25,\n      timerSeconds: 0,\n      currentTimer: \"Session\",\n      timerRunning: false,\n    });\n    this.audioAlarm.pause();\n    this.audioAlarm.currentTime = 0;\n  }\n\n  timerRunningSwitch() {\n    this.setState({ timerRunning: !this.state.timerRunning });\n  }\n\n  render() {\n    return (\n      <Container id='container' fluid>\n        <Row>\n          <h1>\n            <img\n              src={require(\"./pomodoro.png\")}\n              alt='tomato'\n              height='50px'\n              width='50px'\n            />{\" \"}\n            Pomodoro Clock\n          </h1>\n        </Row>\n        <Row>\n          <Col xs={12} sm={4}>\n            <SessionLength\n              sessionLength={this.state.sessionLength}\n              increaseSession={this.onIncreaseSessionLength}\n              decreaseSession={this.onDecreaseSessionLength}\n              timerRunning={this.state.timerRunning}\n            />\n          </Col>\n          <Col xs={12} sm={4}>\n            <BreakLength\n              breakLength={this.state.breakLength}\n              increaseBreak={this.onIncreaseBreakLength}\n              decreaseBreak={this.onDecreaseBreakLength}\n              timerRunning={this.state.timerRunning}\n            />\n          </Col>\n          <Col xs={12} sm={4}>\n            <LongBreakLength\n              longBreakLength={this.state.longBreakLength}\n              increaseLongBreak={this.onIncreaseLongBreakLength}\n              decreaseLongBreak={this.onDecreaseLongBreakLength}\n              timerRunning={this.state.timerRunning}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Timer\n              timerCount={this.state.timerCount}\n              resetTimer={this.onResetTimer}\n              timerCountdown={this.timerCountdown}\n              currentSession={this.state.currentTimer}\n              timerSeconds={this.state.timerSeconds}\n              timerRunning={this.state.timerRunning}\n              timerRunningSwitch={this.timerRunningSwitch}\n            />\n          </Col>\n        </Row>\n        <audio\n          id='beep'\n          preload='auto'\n          src={Alarm}\n          ref={(audio) => {\n            this.audioAlarm = audio;\n          }}\n        />\n        <Row>\n          <footer id='footer'>\n            Made by{\" \"}\n            <a href='https://github.com/Al3busse' id='footerA'>\n              Alejandro Busse\n            </a>\n          </footer>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}